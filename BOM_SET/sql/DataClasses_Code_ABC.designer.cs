#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BOM_SET.sql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DataClasses_Code_ABCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertTable_structure_bom(Table_structure_bom instance);
    partial void UpdateTable_structure_bom(Table_structure_bom instance);
    partial void DeleteTable_structure_bom(Table_structure_bom instance);
    #endregion
		
		public DataClasses_Code_ABCDataContext() : 
				base(global::BOM_SET.Properties.Settings.Default.Database1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_Code_ABCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_Code_ABCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_Code_ABCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses_Code_ABCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Table_structure_bom> Table_structure_bom
		{
			get
			{
				return this.GetTable<Table_structure_bom>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_structure_bom")]
	public partial class Table_structure_bom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _分类代码A;
		
		private string _分类代码B;
		
		private string _分类代码C;
		
		private string _型号码D;
		
		private string _物品代码E;
		
		private string _物料名称;
		
		private string _注释;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void On分类代码AChanging(string value);
    partial void On分类代码AChanged();
    partial void On分类代码BChanging(string value);
    partial void On分类代码BChanged();
    partial void On分类代码CChanging(string value);
    partial void On分类代码CChanged();
    partial void On型号码DChanging(string value);
    partial void On型号码DChanged();
    partial void On物品代码EChanging(string value);
    partial void On物品代码EChanged();
    partial void On物料名称Changing(string value);
    partial void On物料名称Changed();
    partial void On注释Changing(string value);
    partial void On注释Changed();
    #endregion
		
		public Table_structure_bom()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_分类代码A", DbType="NVarChar(255)")]
		public string 分类代码A
		{
			get
			{
				return this._分类代码A;
			}
			set
			{
				if ((this._分类代码A != value))
				{
					this.On分类代码AChanging(value);
					this.SendPropertyChanging();
					this._分类代码A = value;
					this.SendPropertyChanged("分类代码A");
					this.On分类代码AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_分类代码B", DbType="NVarChar(255)")]
		public string 分类代码B
		{
			get
			{
				return this._分类代码B;
			}
			set
			{
				if ((this._分类代码B != value))
				{
					this.On分类代码BChanging(value);
					this.SendPropertyChanging();
					this._分类代码B = value;
					this.SendPropertyChanged("分类代码B");
					this.On分类代码BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_分类代码C", DbType="NVarChar(255)")]
		public string 分类代码C
		{
			get
			{
				return this._分类代码C;
			}
			set
			{
				if ((this._分类代码C != value))
				{
					this.On分类代码CChanging(value);
					this.SendPropertyChanging();
					this._分类代码C = value;
					this.SendPropertyChanged("分类代码C");
					this.On分类代码CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_型号码D", DbType="NVarChar(255)")]
		public string 型号码D
		{
			get
			{
				return this._型号码D;
			}
			set
			{
				if ((this._型号码D != value))
				{
					this.On型号码DChanging(value);
					this.SendPropertyChanging();
					this._型号码D = value;
					this.SendPropertyChanged("型号码D");
					this.On型号码DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_物品代码E", DbType="NVarChar(255)")]
		public string 物品代码E
		{
			get
			{
				return this._物品代码E;
			}
			set
			{
				if ((this._物品代码E != value))
				{
					this.On物品代码EChanging(value);
					this.SendPropertyChanging();
					this._物品代码E = value;
					this.SendPropertyChanged("物品代码E");
					this.On物品代码EChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_物料名称", DbType="NVarChar(255)")]
		public string 物料名称
		{
			get
			{
				return this._物料名称;
			}
			set
			{
				if ((this._物料名称 != value))
				{
					this.On物料名称Changing(value);
					this.SendPropertyChanging();
					this._物料名称 = value;
					this.SendPropertyChanged("物料名称");
					this.On物料名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_注释", DbType="NVarChar(255)")]
		public string 注释
		{
			get
			{
				return this._注释;
			}
			set
			{
				if ((this._注释 != value))
				{
					this.On注释Changing(value);
					this.SendPropertyChanging();
					this._注释 = value;
					this.SendPropertyChanged("注释");
					this.On注释Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
